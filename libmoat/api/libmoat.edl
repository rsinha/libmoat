enclave {
    include "sgx_eid.h"
    include "sgx_dh.h"

    untrusted {
        uint32_t recv_dh_msg1_ocall([in] sgx_measurement_t *target_enclave, [out] sgx_dh_msg1_t *dh_msg1, uint32_t session_id);
        uint32_t send_dh_msg2_recv_dh_msg3_ocall([in] sgx_dh_msg2_t *dh_msg2, [out] sgx_dh_msg3_t *dh_msg3, uint32_t session_id);
        uint32_t send_dh_msg1_recv_dh_msg2_ocall([in] sgx_measurement_t *target_enclave, [in] sgx_dh_msg1_t *dh_msg1, [out] sgx_dh_msg2_t *dh_msg2, uint32_t session_id);
        uint32_t send_dh_msg3_ocall([in] sgx_dh_msg3_t *dh_msg3, uint32_t session_id);
        uint32_t end_session_ocall(uint32_t session_id);
        uint32_t send_msg_ocall([in, size=len] void *buf, size_t len, uint32_t session_id);
        uint32_t recv_msg_ocall([out, size=len_max] void *buf, size_t len_max, [out] size_t *len_actual, uint32_t session_id);
        uint32_t print_debug_on_host_ocall([string,in] const char *str);
    };
};
