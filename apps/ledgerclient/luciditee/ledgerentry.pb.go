// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ledgerentry.proto

/*
Package luciditee is a generated protocol buffer package.

It is generated from these files:
	ledgerentry.proto

It has these top-level messages:
	Attempt
	Ledger
	Specification
	Record
	Delivery
	Secret
	Statement
	LedgerEntry
	LedgerEntryResponse
	LedgerQueryRequest
	LedgerQueryResponse
	BlockchainInfoRequest
	BlockchainInfoResponse
*/
package luciditee

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Specification_Type int32

const (
	Specification_FILE Specification_Type = 0
	Specification_KVS  Specification_Type = 1
)

var Specification_Type_name = map[int32]string{
	0: "FILE",
	1: "KVS",
}
var Specification_Type_value = map[string]int32{
	"FILE": 0,
	"KVS":  1,
}

func (x Specification_Type) Enum() *Specification_Type {
	p := new(Specification_Type)
	*p = x
	return p
}
func (x Specification_Type) String() string {
	return proto.EnumName(Specification_Type_name, int32(x))
}
func (x *Specification_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Specification_Type_value, data, "Specification_Type")
	if err != nil {
		return err
	}
	*x = Specification_Type(value)
	return nil
}
func (Specification_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

type LedgerEntry_EntryType int32

const (
	LedgerEntry_CREATE  LedgerEntry_EntryType = 0
	LedgerEntry_RECORD  LedgerEntry_EntryType = 1
	LedgerEntry_DELIVER LedgerEntry_EntryType = 2
)

var LedgerEntry_EntryType_name = map[int32]string{
	0: "CREATE",
	1: "RECORD",
	2: "DELIVER",
}
var LedgerEntry_EntryType_value = map[string]int32{
	"CREATE":  0,
	"RECORD":  1,
	"DELIVER": 2,
}

func (x LedgerEntry_EntryType) Enum() *LedgerEntry_EntryType {
	p := new(LedgerEntry_EntryType)
	*p = x
	return p
}
func (x LedgerEntry_EntryType) String() string {
	return proto.EnumName(LedgerEntry_EntryType_name, int32(x))
}
func (x *LedgerEntry_EntryType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LedgerEntry_EntryType_value, data, "LedgerEntry_EntryType")
	if err != nil {
		return err
	}
	*x = LedgerEntry_EntryType(value)
	return nil
}
func (LedgerEntry_EntryType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{7, 0} }

type Attempt struct {
	Guess            *uint64 `protobuf:"varint,1,req,name=guess" json:"guess,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Attempt) Reset()                    { *m = Attempt{} }
func (m *Attempt) String() string            { return proto.CompactTextString(m) }
func (*Attempt) ProtoMessage()               {}
func (*Attempt) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Attempt) GetGuess() uint64 {
	if m != nil && m.Guess != nil {
		return *m.Guess
	}
	return 0
}

type Ledger struct {
	Blocks           []*Ledger_Block `protobuf:"bytes,1,rep,name=blocks" json:"blocks,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Ledger) Reset()                    { *m = Ledger{} }
func (m *Ledger) String() string            { return proto.CompactTextString(m) }
func (*Ledger) ProtoMessage()               {}
func (*Ledger) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Ledger) GetBlocks() []*Ledger_Block {
	if m != nil {
		return m.Blocks
	}
	return nil
}

type Ledger_Block struct {
	Height           *uint64 `protobuf:"varint,1,req,name=height" json:"height,omitempty"`
	Content          []byte  `protobuf:"bytes,2,req,name=content" json:"content,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Ledger_Block) Reset()                    { *m = Ledger_Block{} }
func (m *Ledger_Block) String() string            { return proto.CompactTextString(m) }
func (*Ledger_Block) ProtoMessage()               {}
func (*Ledger_Block) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *Ledger_Block) GetHeight() uint64 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

func (m *Ledger_Block) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type Specification struct {
	Id               *uint64                            `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Inputs           []*Specification_InputDescription  `protobuf:"bytes,2,rep,name=inputs" json:"inputs,omitempty"`
	Outputs          []*Specification_OutputDescription `protobuf:"bytes,3,rep,name=outputs" json:"outputs,omitempty"`
	Statevars        []*Specification_StateDescription  `protobuf:"bytes,4,rep,name=statevars" json:"statevars,omitempty"`
	XXX_unrecognized []byte                             `json:"-"`
}

func (m *Specification) Reset()                    { *m = Specification{} }
func (m *Specification) String() string            { return proto.CompactTextString(m) }
func (*Specification) ProtoMessage()               {}
func (*Specification) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Specification) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Specification) GetInputs() []*Specification_InputDescription {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *Specification) GetOutputs() []*Specification_OutputDescription {
	if m != nil {
		return m.Outputs
	}
	return nil
}

func (m *Specification) GetStatevars() []*Specification_StateDescription {
	if m != nil {
		return m.Statevars
	}
	return nil
}

type Specification_InputDescription struct {
	InputName        *string             `protobuf:"bytes,1,req,name=input_name,json=inputName" json:"input_name,omitempty"`
	Type             *Specification_Type `protobuf:"varint,2,req,name=type,enum=luciditee.Specification_Type" json:"type,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *Specification_InputDescription) Reset()         { *m = Specification_InputDescription{} }
func (m *Specification_InputDescription) String() string { return proto.CompactTextString(m) }
func (*Specification_InputDescription) ProtoMessage()    {}
func (*Specification_InputDescription) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{2, 0}
}

func (m *Specification_InputDescription) GetInputName() string {
	if m != nil && m.InputName != nil {
		return *m.InputName
	}
	return ""
}

func (m *Specification_InputDescription) GetType() Specification_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Specification_FILE
}

type Specification_OutputDescription struct {
	OutputName       *string             `protobuf:"bytes,1,req,name=output_name,json=outputName" json:"output_name,omitempty"`
	Type             *Specification_Type `protobuf:"varint,2,req,name=type,enum=luciditee.Specification_Type" json:"type,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *Specification_OutputDescription) Reset()         { *m = Specification_OutputDescription{} }
func (m *Specification_OutputDescription) String() string { return proto.CompactTextString(m) }
func (*Specification_OutputDescription) ProtoMessage()    {}
func (*Specification_OutputDescription) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{2, 1}
}

func (m *Specification_OutputDescription) GetOutputName() string {
	if m != nil && m.OutputName != nil {
		return *m.OutputName
	}
	return ""
}

func (m *Specification_OutputDescription) GetType() Specification_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Specification_FILE
}

type Specification_StateDescription struct {
	StateName        *string             `protobuf:"bytes,1,req,name=state_name,json=stateName" json:"state_name,omitempty"`
	Type             *Specification_Type `protobuf:"varint,2,req,name=type,enum=luciditee.Specification_Type" json:"type,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *Specification_StateDescription) Reset()         { *m = Specification_StateDescription{} }
func (m *Specification_StateDescription) String() string { return proto.CompactTextString(m) }
func (*Specification_StateDescription) ProtoMessage()    {}
func (*Specification_StateDescription) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{2, 2}
}

func (m *Specification_StateDescription) GetStateName() string {
	if m != nil && m.StateName != nil {
		return *m.StateName
	}
	return ""
}

func (m *Specification_StateDescription) GetType() Specification_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Specification_FILE
}

type Record struct {
	Id               *uint64               `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	T                *uint64               `protobuf:"varint,2,req,name=t" json:"t,omitempty"`
	Inputs           []*Record_NamedDigest `protobuf:"bytes,3,rep,name=inputs" json:"inputs,omitempty"`
	Outputs          []*Record_NamedDigest `protobuf:"bytes,4,rep,name=outputs" json:"outputs,omitempty"`
	Statevars        []*Record_NamedDigest `protobuf:"bytes,5,rep,name=statevars" json:"statevars,omitempty"`
	Signatures       []byte                `protobuf:"bytes,6,opt,name=signatures" json:"signatures,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *Record) Reset()                    { *m = Record{} }
func (m *Record) String() string            { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()               {}
func (*Record) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Record) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Record) GetT() uint64 {
	if m != nil && m.T != nil {
		return *m.T
	}
	return 0
}

func (m *Record) GetInputs() []*Record_NamedDigest {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *Record) GetOutputs() []*Record_NamedDigest {
	if m != nil {
		return m.Outputs
	}
	return nil
}

func (m *Record) GetStatevars() []*Record_NamedDigest {
	if m != nil {
		return m.Statevars
	}
	return nil
}

func (m *Record) GetSignatures() []byte {
	if m != nil {
		return m.Signatures
	}
	return nil
}

type Record_NamedDigest struct {
	Name             *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Digest           []byte  `protobuf:"bytes,2,req,name=digest" json:"digest,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Record_NamedDigest) Reset()                    { *m = Record_NamedDigest{} }
func (m *Record_NamedDigest) String() string            { return proto.CompactTextString(m) }
func (*Record_NamedDigest) ProtoMessage()               {}
func (*Record_NamedDigest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 0} }

func (m *Record_NamedDigest) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Record_NamedDigest) GetDigest() []byte {
	if m != nil {
		return m.Digest
	}
	return nil
}

type Delivery struct {
	Id               *uint64 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	T                *uint64 `protobuf:"varint,2,req,name=t" json:"t,omitempty"`
	EncryptedKey     []byte  `protobuf:"bytes,3,req,name=encrypted_key,json=encryptedKey" json:"encrypted_key,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Delivery) Reset()                    { *m = Delivery{} }
func (m *Delivery) String() string            { return proto.CompactTextString(m) }
func (*Delivery) ProtoMessage()               {}
func (*Delivery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Delivery) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Delivery) GetT() uint64 {
	if m != nil && m.T != nil {
		return *m.T
	}
	return 0
}

func (m *Delivery) GetEncryptedKey() []byte {
	if m != nil {
		return m.EncryptedKey
	}
	return nil
}

type Secret struct {
	Password         *uint64 `protobuf:"varint,1,req,name=password" json:"password,omitempty"`
	Guesses          *uint64 `protobuf:"varint,2,req,name=guesses" json:"guesses,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Secret) Reset()                    { *m = Secret{} }
func (m *Secret) String() string            { return proto.CompactTextString(m) }
func (*Secret) ProtoMessage()               {}
func (*Secret) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Secret) GetPassword() uint64 {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return 0
}

func (m *Secret) GetGuesses() uint64 {
	if m != nil && m.Guesses != nil {
		return *m.Guesses
	}
	return 0
}

type Statement struct {
	Txs              []*Statement_Transaction `protobuf:"bytes,1,rep,name=txs" json:"txs,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *Statement) Reset()                    { *m = Statement{} }
func (m *Statement) String() string            { return proto.CompactTextString(m) }
func (*Statement) ProtoMessage()               {}
func (*Statement) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Statement) GetTxs() []*Statement_Transaction {
	if m != nil {
		return m.Txs
	}
	return nil
}

type Statement_Transaction struct {
	Amount           *uint64 `protobuf:"varint,1,req,name=amount" json:"amount,omitempty"`
	Gmr              *uint64 `protobuf:"varint,2,req,name=gmr" json:"gmr,omitempty"`
	Timestamp        *uint64 `protobuf:"varint,3,req,name=timestamp" json:"timestamp,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Statement_Transaction) Reset()                    { *m = Statement_Transaction{} }
func (m *Statement_Transaction) String() string            { return proto.CompactTextString(m) }
func (*Statement_Transaction) ProtoMessage()               {}
func (*Statement_Transaction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6, 0} }

func (m *Statement_Transaction) GetAmount() uint64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *Statement_Transaction) GetGmr() uint64 {
	if m != nil && m.Gmr != nil {
		return *m.Gmr
	}
	return 0
}

func (m *Statement_Transaction) GetTimestamp() uint64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

type LedgerEntry struct {
	Type *LedgerEntry_EntryType `protobuf:"varint,1,req,name=type,enum=luciditee.LedgerEntry_EntryType" json:"type,omitempty"`
	// Types that are valid to be assigned to Entry:
	//	*LedgerEntry_Spec
	//	*LedgerEntry_Record
	//	*LedgerEntry_Delivery
	Entry            isLedgerEntry_Entry `protobuf_oneof:"entry"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *LedgerEntry) Reset()                    { *m = LedgerEntry{} }
func (m *LedgerEntry) String() string            { return proto.CompactTextString(m) }
func (*LedgerEntry) ProtoMessage()               {}
func (*LedgerEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type isLedgerEntry_Entry interface{ isLedgerEntry_Entry() }

type LedgerEntry_Spec struct {
	Spec *Specification `protobuf:"bytes,2,opt,name=spec,oneof"`
}
type LedgerEntry_Record struct {
	Record *Record `protobuf:"bytes,3,opt,name=record,oneof"`
}
type LedgerEntry_Delivery struct {
	Delivery *Delivery `protobuf:"bytes,4,opt,name=delivery,oneof"`
}

func (*LedgerEntry_Spec) isLedgerEntry_Entry()     {}
func (*LedgerEntry_Record) isLedgerEntry_Entry()   {}
func (*LedgerEntry_Delivery) isLedgerEntry_Entry() {}

func (m *LedgerEntry) GetEntry() isLedgerEntry_Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (m *LedgerEntry) GetType() LedgerEntry_EntryType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return LedgerEntry_CREATE
}

func (m *LedgerEntry) GetSpec() *Specification {
	if x, ok := m.GetEntry().(*LedgerEntry_Spec); ok {
		return x.Spec
	}
	return nil
}

func (m *LedgerEntry) GetRecord() *Record {
	if x, ok := m.GetEntry().(*LedgerEntry_Record); ok {
		return x.Record
	}
	return nil
}

func (m *LedgerEntry) GetDelivery() *Delivery {
	if x, ok := m.GetEntry().(*LedgerEntry_Delivery); ok {
		return x.Delivery
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*LedgerEntry) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _LedgerEntry_OneofMarshaler, _LedgerEntry_OneofUnmarshaler, _LedgerEntry_OneofSizer, []interface{}{
		(*LedgerEntry_Spec)(nil),
		(*LedgerEntry_Record)(nil),
		(*LedgerEntry_Delivery)(nil),
	}
}

func _LedgerEntry_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*LedgerEntry)
	// entry
	switch x := m.Entry.(type) {
	case *LedgerEntry_Spec:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Spec); err != nil {
			return err
		}
	case *LedgerEntry_Record:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Record); err != nil {
			return err
		}
	case *LedgerEntry_Delivery:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Delivery); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("LedgerEntry.Entry has unexpected type %T", x)
	}
	return nil
}

func _LedgerEntry_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*LedgerEntry)
	switch tag {
	case 2: // entry.spec
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Specification)
		err := b.DecodeMessage(msg)
		m.Entry = &LedgerEntry_Spec{msg}
		return true, err
	case 3: // entry.record
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Record)
		err := b.DecodeMessage(msg)
		m.Entry = &LedgerEntry_Record{msg}
		return true, err
	case 4: // entry.delivery
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Delivery)
		err := b.DecodeMessage(msg)
		m.Entry = &LedgerEntry_Delivery{msg}
		return true, err
	default:
		return false, nil
	}
}

func _LedgerEntry_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*LedgerEntry)
	// entry
	switch x := m.Entry.(type) {
	case *LedgerEntry_Spec:
		s := proto.Size(x.Spec)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *LedgerEntry_Record:
		s := proto.Size(x.Record)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *LedgerEntry_Delivery:
		s := proto.Size(x.Delivery)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type LedgerEntryResponse struct {
	Message          *string                `protobuf:"bytes,1,req,name=message" json:"message,omitempty"`
	Type             *LedgerEntry_EntryType `protobuf:"varint,2,req,name=type,enum=luciditee.LedgerEntry_EntryType" json:"type,omitempty"`
	EntryId          *uint64                `protobuf:"varint,3,req,name=entryId" json:"entryId,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *LedgerEntryResponse) Reset()                    { *m = LedgerEntryResponse{} }
func (m *LedgerEntryResponse) String() string            { return proto.CompactTextString(m) }
func (*LedgerEntryResponse) ProtoMessage()               {}
func (*LedgerEntryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *LedgerEntryResponse) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *LedgerEntryResponse) GetType() LedgerEntry_EntryType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return LedgerEntry_CREATE
}

func (m *LedgerEntryResponse) GetEntryId() uint64 {
	if m != nil && m.EntryId != nil {
		return *m.EntryId
	}
	return 0
}

type LedgerQueryRequest struct {
	Type             *LedgerEntry_EntryType `protobuf:"varint,1,req,name=type,enum=luciditee.LedgerEntry_EntryType" json:"type,omitempty"`
	EntryId          *uint64                `protobuf:"varint,2,req,name=entryId" json:"entryId,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *LedgerQueryRequest) Reset()                    { *m = LedgerQueryRequest{} }
func (m *LedgerQueryRequest) String() string            { return proto.CompactTextString(m) }
func (*LedgerQueryRequest) ProtoMessage()               {}
func (*LedgerQueryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *LedgerQueryRequest) GetType() LedgerEntry_EntryType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return LedgerEntry_CREATE
}

func (m *LedgerQueryRequest) GetEntryId() uint64 {
	if m != nil && m.EntryId != nil {
		return *m.EntryId
	}
	return 0
}

type LedgerQueryResponse struct {
	EntryId          *uint64        `protobuf:"varint,2,req,name=entryId" json:"entryId,omitempty"`
	Entries          []*LedgerEntry `protobuf:"bytes,3,rep,name=entries" json:"entries,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *LedgerQueryResponse) Reset()                    { *m = LedgerQueryResponse{} }
func (m *LedgerQueryResponse) String() string            { return proto.CompactTextString(m) }
func (*LedgerQueryResponse) ProtoMessage()               {}
func (*LedgerQueryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *LedgerQueryResponse) GetEntryId() uint64 {
	if m != nil && m.EntryId != nil {
		return *m.EntryId
	}
	return 0
}

func (m *LedgerQueryResponse) GetEntries() []*LedgerEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type BlockchainInfoRequest struct {
	Chaincode        *string `protobuf:"bytes,1,req,name=chaincode" json:"chaincode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BlockchainInfoRequest) Reset()                    { *m = BlockchainInfoRequest{} }
func (m *BlockchainInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*BlockchainInfoRequest) ProtoMessage()               {}
func (*BlockchainInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *BlockchainInfoRequest) GetChaincode() string {
	if m != nil && m.Chaincode != nil {
		return *m.Chaincode
	}
	return ""
}

type BlockchainInfoResponse struct {
	Height            *uint64 `protobuf:"varint,1,req,name=height" json:"height,omitempty"`
	CurrentBlockHash  *string `protobuf:"bytes,2,req,name=currentBlockHash" json:"currentBlockHash,omitempty"`
	PreviousBlockHash *string `protobuf:"bytes,3,req,name=previousBlockHash" json:"previousBlockHash,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *BlockchainInfoResponse) Reset()                    { *m = BlockchainInfoResponse{} }
func (m *BlockchainInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*BlockchainInfoResponse) ProtoMessage()               {}
func (*BlockchainInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *BlockchainInfoResponse) GetHeight() uint64 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

func (m *BlockchainInfoResponse) GetCurrentBlockHash() string {
	if m != nil && m.CurrentBlockHash != nil {
		return *m.CurrentBlockHash
	}
	return ""
}

func (m *BlockchainInfoResponse) GetPreviousBlockHash() string {
	if m != nil && m.PreviousBlockHash != nil {
		return *m.PreviousBlockHash
	}
	return ""
}

func init() {
	proto.RegisterType((*Attempt)(nil), "luciditee.Attempt")
	proto.RegisterType((*Ledger)(nil), "luciditee.Ledger")
	proto.RegisterType((*Ledger_Block)(nil), "luciditee.Ledger.Block")
	proto.RegisterType((*Specification)(nil), "luciditee.Specification")
	proto.RegisterType((*Specification_InputDescription)(nil), "luciditee.Specification.InputDescription")
	proto.RegisterType((*Specification_OutputDescription)(nil), "luciditee.Specification.OutputDescription")
	proto.RegisterType((*Specification_StateDescription)(nil), "luciditee.Specification.StateDescription")
	proto.RegisterType((*Record)(nil), "luciditee.Record")
	proto.RegisterType((*Record_NamedDigest)(nil), "luciditee.Record.NamedDigest")
	proto.RegisterType((*Delivery)(nil), "luciditee.Delivery")
	proto.RegisterType((*Secret)(nil), "luciditee.Secret")
	proto.RegisterType((*Statement)(nil), "luciditee.Statement")
	proto.RegisterType((*Statement_Transaction)(nil), "luciditee.Statement.Transaction")
	proto.RegisterType((*LedgerEntry)(nil), "luciditee.LedgerEntry")
	proto.RegisterType((*LedgerEntryResponse)(nil), "luciditee.LedgerEntryResponse")
	proto.RegisterType((*LedgerQueryRequest)(nil), "luciditee.LedgerQueryRequest")
	proto.RegisterType((*LedgerQueryResponse)(nil), "luciditee.LedgerQueryResponse")
	proto.RegisterType((*BlockchainInfoRequest)(nil), "luciditee.BlockchainInfoRequest")
	proto.RegisterType((*BlockchainInfoResponse)(nil), "luciditee.BlockchainInfoResponse")
	proto.RegisterEnum("luciditee.Specification_Type", Specification_Type_name, Specification_Type_value)
	proto.RegisterEnum("luciditee.LedgerEntry_EntryType", LedgerEntry_EntryType_name, LedgerEntry_EntryType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for LedgerService service

type LedgerServiceClient interface {
	// Define a RPC operation
	Entry(ctx context.Context, in *LedgerEntry, opts ...grpc.CallOption) (*LedgerEntryResponse, error)
	Query(ctx context.Context, in *LedgerQueryRequest, opts ...grpc.CallOption) (*LedgerQueryResponse, error)
	Info(ctx context.Context, in *BlockchainInfoRequest, opts ...grpc.CallOption) (*BlockchainInfoResponse, error)
}

type ledgerServiceClient struct {
	cc *grpc.ClientConn
}

func NewLedgerServiceClient(cc *grpc.ClientConn) LedgerServiceClient {
	return &ledgerServiceClient{cc}
}

func (c *ledgerServiceClient) Entry(ctx context.Context, in *LedgerEntry, opts ...grpc.CallOption) (*LedgerEntryResponse, error) {
	out := new(LedgerEntryResponse)
	err := grpc.Invoke(ctx, "/luciditee.LedgerService/entry", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ledgerServiceClient) Query(ctx context.Context, in *LedgerQueryRequest, opts ...grpc.CallOption) (*LedgerQueryResponse, error) {
	out := new(LedgerQueryResponse)
	err := grpc.Invoke(ctx, "/luciditee.LedgerService/query", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ledgerServiceClient) Info(ctx context.Context, in *BlockchainInfoRequest, opts ...grpc.CallOption) (*BlockchainInfoResponse, error) {
	out := new(BlockchainInfoResponse)
	err := grpc.Invoke(ctx, "/luciditee.LedgerService/info", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for LedgerService service

type LedgerServiceServer interface {
	// Define a RPC operation
	Entry(context.Context, *LedgerEntry) (*LedgerEntryResponse, error)
	Query(context.Context, *LedgerQueryRequest) (*LedgerQueryResponse, error)
	Info(context.Context, *BlockchainInfoRequest) (*BlockchainInfoResponse, error)
}

func RegisterLedgerServiceServer(s *grpc.Server, srv LedgerServiceServer) {
	s.RegisterService(&_LedgerService_serviceDesc, srv)
}

func _LedgerService_Entry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LedgerEntry)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LedgerServiceServer).Entry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luciditee.LedgerService/Entry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LedgerServiceServer).Entry(ctx, req.(*LedgerEntry))
	}
	return interceptor(ctx, in, info, handler)
}

func _LedgerService_Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LedgerQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LedgerServiceServer).Query(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luciditee.LedgerService/Query",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LedgerServiceServer).Query(ctx, req.(*LedgerQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LedgerService_Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockchainInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LedgerServiceServer).Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luciditee.LedgerService/Info",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LedgerServiceServer).Info(ctx, req.(*BlockchainInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LedgerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "luciditee.LedgerService",
	HandlerType: (*LedgerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "entry",
			Handler:    _LedgerService_Entry_Handler,
		},
		{
			MethodName: "query",
			Handler:    _LedgerService_Query_Handler,
		},
		{
			MethodName: "info",
			Handler:    _LedgerService_Info_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ledgerentry.proto",
}

func init() { proto.RegisterFile("ledgerentry.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 934 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0x5d, 0x73, 0xdb, 0x44,
	0x17, 0x8e, 0x64, 0x59, 0x8e, 0x8f, 0x93, 0x8e, 0x73, 0xfa, 0xbe, 0x41, 0x78, 0x9a, 0xd6, 0x88,
	0x1b, 0x53, 0x18, 0xd1, 0x7a, 0xe8, 0x30, 0x1d, 0x66, 0x60, 0xd2, 0xda, 0x25, 0x9e, 0x04, 0x3a,
	0xac, 0x43, 0x6f, 0x3b, 0x42, 0x3a, 0x71, 0x76, 0x1a, 0x7d, 0x54, 0xbb, 0x0a, 0xf8, 0x8a, 0x7b,
	0x2e, 0xb8, 0xe4, 0x67, 0xf0, 0x1f, 0xf8, 0x31, 0xfc, 0x0f, 0x66, 0x57, 0x1f, 0x56, 0xe2, 0x98,
	0x96, 0xdc, 0x64, 0x7c, 0xce, 0x3e, 0xe7, 0xe3, 0x39, 0xfb, 0xec, 0x51, 0x60, 0xef, 0x82, 0xc2,
	0x05, 0x65, 0x14, 0xcb, 0x6c, 0xe9, 0xa5, 0x59, 0x22, 0x13, 0xec, 0x5e, 0xe4, 0x01, 0x0f, 0xb9,
	0x24, 0x72, 0x1f, 0x40, 0xe7, 0x50, 0x4a, 0x8a, 0x52, 0x89, 0xff, 0x83, 0xf6, 0x22, 0x27, 0x21,
	0x1c, 0x63, 0x68, 0x8e, 0x2c, 0x56, 0x18, 0xae, 0x04, 0xfb, 0x44, 0x27, 0xc0, 0xcf, 0xc1, 0xfe,
	0xe9, 0x22, 0x09, 0xde, 0x28, 0x40, 0x6b, 0xd4, 0x1b, 0x7f, 0xe0, 0xd5, 0x69, 0xbc, 0x02, 0xe2,
	0x3d, 0x53, 0xe7, 0xac, 0x84, 0x0d, 0x9e, 0x42, 0x5b, 0x3b, 0x70, 0x1f, 0xec, 0x73, 0xe2, 0x8b,
	0x73, 0x59, 0xa6, 0x2e, 0x2d, 0x74, 0xa0, 0x13, 0x24, 0xb1, 0xa4, 0x58, 0x3a, 0xe6, 0xd0, 0x1c,
	0xed, 0xb0, 0xca, 0x74, 0xff, 0xb2, 0x60, 0x77, 0x9e, 0x52, 0xc0, 0xcf, 0x78, 0xe0, 0x4b, 0x9e,
	0xc4, 0x78, 0x07, 0x4c, 0x1e, 0x96, 0xf1, 0x26, 0x0f, 0xf1, 0x10, 0x6c, 0x1e, 0xa7, 0xb9, 0x14,
	0x8e, 0xa9, 0xbb, 0xf9, 0xa4, 0xd1, 0xcd, 0x95, 0x48, 0x6f, 0xa6, 0x60, 0x13, 0x12, 0x41, 0xc6,
	0x53, 0xe5, 0x60, 0x65, 0x20, 0x4e, 0xa0, 0x93, 0xe4, 0x52, 0xe7, 0x68, 0xe9, 0x1c, 0x0f, 0x37,
	0xe6, 0x78, 0xa9, 0x71, 0xcd, 0x24, 0x55, 0x28, 0x7e, 0x0b, 0x5d, 0x21, 0x7d, 0x49, 0x97, 0x7e,
	0x26, 0x1c, 0xeb, 0x1d, 0xbd, 0xcc, 0x15, 0xb2, 0x99, 0x66, 0x15, 0x3b, 0x08, 0xa1, 0x7f, 0xbd,
	0x55, 0x3c, 0x00, 0xd0, 0xcd, 0xbe, 0x8e, 0xfd, 0x88, 0x34, 0xfb, 0x2e, 0xeb, 0x6a, 0xcf, 0xf7,
	0x7e, 0x44, 0xf8, 0x18, 0x2c, 0xb9, 0x4c, 0x49, 0x4f, 0xef, 0xce, 0xf8, 0x60, 0x63, 0xd9, 0xd3,
	0x65, 0x4a, 0x4c, 0x43, 0x07, 0x0b, 0xd8, 0x5b, 0x23, 0x83, 0x0f, 0xa0, 0x57, 0xd0, 0x69, 0xd6,
	0x81, 0xc2, 0x75, 0xdb, 0x42, 0x21, 0xf4, 0xaf, 0xb3, 0x55, 0x74, 0x34, 0xdf, 0x2b, 0x74, 0xb4,
	0xe7, 0x96, 0x55, 0xdc, 0x0f, 0xc1, 0x52, 0x16, 0x6e, 0x83, 0xf5, 0x62, 0x76, 0x32, 0xed, 0x6f,
	0x61, 0x07, 0x5a, 0xc7, 0xaf, 0xe6, 0x7d, 0xc3, 0xfd, 0xd3, 0x04, 0x9b, 0x51, 0x90, 0x64, 0xe1,
	0x9a, 0x78, 0x76, 0xc0, 0x28, 0x24, 0x67, 0x31, 0x43, 0xe2, 0x93, 0x5a, 0x4a, 0x85, 0x0c, 0x9a,
	0x85, 0x8b, 0x04, 0x9e, 0x6a, 0x2f, 0x9c, 0xf0, 0x05, 0x09, 0x59, 0xcb, 0xe7, 0xcb, 0x95, 0x7c,
	0xac, 0xf7, 0x89, 0xab, 0x15, 0xf3, 0x55, 0x53, 0x31, 0xed, 0xf7, 0x09, 0x5d, 0xe1, 0xf1, 0x3e,
	0x80, 0xe0, 0x8b, 0xd8, 0x97, 0x79, 0x46, 0xc2, 0xb1, 0x87, 0xc6, 0x68, 0x87, 0x35, 0x3c, 0x83,
	0xa7, 0xd0, 0x6b, 0x44, 0x22, 0x82, 0xd5, 0x98, 0xb5, 0xfe, 0xad, 0x9e, 0x63, 0xa8, 0x4f, 0xcb,
	0x57, 0x57, 0x5a, 0xee, 0x77, 0xb0, 0x3d, 0xa1, 0x0b, 0x7e, 0x49, 0xd9, 0xf2, 0x1d, 0x13, 0xfb,
	0x18, 0x76, 0x29, 0x0e, 0xb2, 0x65, 0x2a, 0x29, 0x7c, 0xfd, 0x86, 0x96, 0x4e, 0x4b, 0x27, 0xda,
	0xa9, 0x9d, 0xc7, 0xb4, 0x74, 0xbf, 0x06, 0x7b, 0x4e, 0x41, 0x46, 0x12, 0x07, 0xb0, 0x9d, 0xfa,
	0x42, 0xfc, 0x9c, 0x64, 0x55, 0xca, 0xda, 0x56, 0x3b, 0x40, 0x2f, 0x1a, 0x12, 0x65, 0xfa, 0xca,
	0x74, 0xff, 0x30, 0xa0, 0xab, 0x15, 0x14, 0x51, 0x2c, 0x71, 0x0c, 0x2d, 0xf9, 0x4b, 0xb5, 0x7a,
	0x86, 0x4d, 0x69, 0x54, 0x10, 0xef, 0x34, 0xf3, 0x63, 0xe1, 0x07, 0xfa, 0x5d, 0x29, 0xf0, 0xe0,
	0x47, 0xe8, 0x35, 0x7c, 0x8a, 0xb7, 0x1f, 0x25, 0x79, 0x5c, 0xaf, 0xa1, 0xc2, 0xc2, 0x3e, 0xb4,
	0x16, 0x51, 0x56, 0x96, 0x57, 0x3f, 0xf1, 0x1e, 0x74, 0x25, 0x8f, 0x48, 0x48, 0x3f, 0x4a, 0x35,
	0x37, 0x8b, 0xad, 0x1c, 0xee, 0xef, 0x26, 0xf4, 0x8a, 0x85, 0x37, 0x55, 0x4b, 0x15, 0xbf, 0x28,
	0x65, 0x6b, 0x68, 0xd9, 0x0e, 0xd7, 0xd6, 0xa2, 0x46, 0x79, 0xfa, 0xef, 0x4a, 0xb9, 0xe8, 0x81,
	0x25, 0x52, 0x0a, 0x1c, 0x73, 0x68, 0x8c, 0x7a, 0x63, 0x67, 0x93, 0xd8, 0x8f, 0xb6, 0x98, 0xc6,
	0xe1, 0xa7, 0x60, 0x67, 0x5a, 0x19, 0x4e, 0x4b, 0x47, 0xec, 0xad, 0x49, 0xe6, 0x68, 0x8b, 0x95,
	0x10, 0x7c, 0x0c, 0xdb, 0x61, 0x79, 0x95, 0x8e, 0xa5, 0xe1, 0x77, 0x1b, 0xf0, 0xea, 0x96, 0x8f,
	0xb6, 0x58, 0x0d, 0x73, 0x1f, 0x41, 0xb7, 0x6e, 0x11, 0x01, 0xec, 0xe7, 0x6c, 0x7a, 0x78, 0xaa,
	0x1e, 0x14, 0x80, 0xcd, 0xa6, 0xcf, 0x5f, 0xb2, 0x49, 0xdf, 0xc0, 0x1e, 0x74, 0x26, 0xd3, 0x93,
	0xd9, 0xab, 0x29, 0xeb, 0x9b, 0xcf, 0x3a, 0xd0, 0xd6, 0x5f, 0x15, 0xf7, 0x57, 0xb8, 0xdb, 0x60,
	0xca, 0x48, 0xa4, 0x49, 0x2c, 0x48, 0x5d, 0x6d, 0x44, 0x42, 0xf8, 0x8b, 0x4a, 0x7e, 0x95, 0x59,
	0x4f, 0xcc, 0xfc, 0x4f, 0x13, 0x73, 0xa0, 0xa3, 0xeb, 0xcd, 0xc2, 0xf2, 0x4e, 0x2a, 0xd3, 0x0d,
	0x01, 0x8b, 0xc0, 0x1f, 0x72, 0x52, 0x0d, 0xbc, 0xcd, 0x95, 0xf6, 0x6f, 0x77, 0x2f, 0x8d, 0x2a,
	0xe6, 0xd5, 0x2a, 0x7e, 0x45, 0xb3, 0xac, 0xb2, 0xa2, 0x79, 0x73, 0x00, 0x3e, 0x2a, 0x4e, 0x38,
	0x55, 0x9b, 0x65, 0xff, 0xe6, 0x1e, 0x58, 0x05, 0x73, 0x9f, 0xc0, 0xff, 0xf5, 0x27, 0x33, 0x38,
	0xf7, 0x79, 0x3c, 0x8b, 0xcf, 0x92, 0x8a, 0xcb, 0x3d, 0xe8, 0x6a, 0x5f, 0x90, 0x84, 0xf5, 0xe2,
	0xac, 0x1d, 0xee, 0x6f, 0x06, 0xec, 0x5f, 0x8f, 0x2b, 0xbb, 0xdb, 0xf4, 0xed, 0x7d, 0x08, 0xfd,
	0x20, 0xcf, 0xd4, 0xbf, 0x05, 0x3a, 0xf0, 0xc8, 0x17, 0xe7, 0xba, 0xfd, 0x2e, 0x5b, 0xf3, 0xe3,
	0x67, 0xb0, 0x97, 0x66, 0x74, 0xc9, 0x93, 0x5c, 0xac, 0xc0, 0x2d, 0x0d, 0x5e, 0x3f, 0x18, 0xff,
	0x6d, 0xc0, 0x6e, 0x41, 0x6e, 0x4e, 0xd9, 0x25, 0x0f, 0x08, 0xbf, 0x29, 0x85, 0x82, 0x1b, 0xf8,
	0x0f, 0xee, 0x6f, 0x98, 0x4b, 0x45, 0xe2, 0x05, 0xb4, 0xdf, 0xaa, 0x99, 0xe3, 0xc1, 0x1a, 0xb0,
	0x79, 0xe3, 0x37, 0xe4, 0xb9, 0x7a, 0x55, 0xc7, 0x60, 0xf1, 0xf8, 0x2c, 0xc1, 0xa6, 0x16, 0x6e,
	0x9c, 0xf7, 0xe0, 0xa3, 0x7f, 0x41, 0x14, 0xc9, 0xfe, 0x09, 0x00, 0x00, 0xff, 0xff, 0x55, 0xa6,
	0x16, 0xec, 0x59, 0x09, 0x00, 0x00,
}
