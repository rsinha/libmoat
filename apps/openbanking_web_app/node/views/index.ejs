<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<title>DeSilo-Open Banking Data Exporter</title>
<link rel="stylesheet" type="text/css" href="style.css">
<meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body>
  <div id="banner">
    <h1>DeSilo - Privacy-preserving open banking platform</h1>
    <p id="intro">
      Help you perform analytics without loosing control over plain data
    </p>

  </div>

  <div id="container">
    <p>
      Click the below button to login to bank account, and export transaction data to S3 bucket.
    </p>

    <button id="link-btn">Link Account</button>
  </div>

  <div id="app">
    <!--<div class="box">-->
      <!--<button id="get-accounts-btn">Get Accounts</button>-->
      <!--<div id="get-accounts-data"></div>-->
    <!--</div>-->

    <!--<div class="box">-->
      <!--<button id="get-item-btn">Get Item</button>-->
      <!--<div id="get-item-data"></div>-->
    <!--</div>-->

    <div class="box">
      <input type="text" value="" id="encryption-key" style="height: 40px; width: 500px; font-size: 14pt" placeholder="Encryption Key">
      <input type="text" value="" id="storage-handle" style="height: 40px; width: 500px; font-size: 14pt" placeholder="Storage Handle">
    </div>
    <div class="box">
      <select id="tx-duration">
        <option value="6"> Last 6 Months </option>
      </select>

      <button id = "export-s3-button">Export To S3</button>
    </div>

    <div class="box">
      <button id="get-transactions-btn">Display Transactions</button>
      <div id="get-transactions-data"></div>
    </div>
  </div>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.2.3/jquery.min.js"></script>
  <script src="https://cdn.plaid.com/link/v2/stable/link-initialize.js"></script>
  <script>
  (function($) {
    var handler = Plaid.create({
      apiVersion: 'v2',
      clientName: 'Plaid Walkthrough Demo',
      env: '<%= PLAID_ENV %>',
      product: ['transactions'],
      key: '<%= PLAID_PUBLIC_KEY %>',
      onSuccess: function(public_token) {
        $.post('/get_access_token', {
          public_token: public_token
        }, function() {
          $('#container').fadeOut('fast', function() {
            $('#intro').hide();
            $('#app, #steps').fadeIn('slow');
          });
        });
      },
    });

    $('#link-btn').on('click', function(e) {
      handler.open();
    });
    


    $('#export-s3-button').on('click', function (e) {
        var startTime = $('#tx-duration').val();
        var storageHandle = $('#storage-handle').val();
        var encryptionKey = $('#encryption-key').val();
        if(!storageHandle || !encryptionKey) {
            alert("Are you ok to create new storahe handle and encryption key? if not please enter them.")
        }
        $.post('/tos3', { start: startTime, storage_id: storageHandle, encryption_key: encryptionKey }, function(data) {
            if (!data.success) {
                // Format the error
                var errorHtml = "";
                data.errors.forEach(function (err, idx) {
                    errorHtml +=
                        '<div class="inner"><p>' +
                        err + '</p></div>';
                })
                // Render the error
                $('#get-transactions-data').slideUp(function() {
                    $(this).slideUp(function() {
                        $(this).html(errorHtml).slideDown();
                    });
                });
            } else {
                var successHtml = '<div class="inner"><p>' + '<strong>' + 'Success:</strong> '
                    +  data.total  + ' records exported to S3 </p></div>';

                successHtml += '<div class="inner"><p>' +
                    '<strong>' + 'Storage Handle' + ':</strong> ' +
                    data.account_id  + ' (Please copy and use later to add more transactions)</p></div>';

                successHtml += '<div class="inner"><p>' +
                    '<strong>' + 'Encryption Key' + ':</strong> ' +
                    data.encryption_key  + '(Please copy and use later to add more transactions)</p></div>';

                // Render the error
                $('#get-transactions-data').slideUp(function() {
                    $(this).slideUp(function() {
                        $(this).html(successHtml).slideDown();
                    });
                });
            }
        });


    })

    $('#get-accounts-btn').on('click', function(e) {
      $.get('/accounts', function(data) {
        $('#get-accounts-data').slideUp(function() {
          var html = '';
          data.accounts.forEach(function(account, idx) {
            html += '<div class="inner">';
            html += '<strong>' + account.name +
              ' $' + (account.balances.available != null ? account.balances.available : account.balances.current) + '</strong><br>';
            html += account.subtype + ' ' + account.mask;
            html += '</div>';
          });

          $(this).html(html).slideDown();
        });
      });
    });

    $('#get-item-btn').on('click', function(e) {
      $.post('/item', function(data) {
        $('#get-item-data').slideUp(function() {
          if (data.error)
            $(this).html('<p>' + data.error + '</p>').slideDown();
          else {
            var html = '<div class="inner">';
            html += '<p>Here\'s some basic information about your Item:</p>';
            html += '<p>Institution name:' + data.institution.name + '</p>';
            html += '<p>Billed products: ' + data.item.billed_products.join(', ') + '</p>';
            html += '<p>Available products: ' + data.item.available_products.join(', ') + '</p>';
            html += '</div>';

            $(this).html(html).slideDown();
          }
        });
      });
    });

    $('#get-transactions-btn').on('click', function(e) {
      $.post('/transactions', function(data) {
        if (data.error != null) {
          // Format the error
          var errorHtml = '<div class="inner"><p>' +
           '<strong>' + data.error.error_code + ':</strong> ' +
           data.error.error_message + '</p></div>';

          if (data.error.error_code === 'PRODUCT_NOT_READY') {
            // Add additional context for `PRODUCT_NOT_READY` errors
            errorHtml += '<div class="inner"><p>The PRODUCT_NOT_READY ' +
             'error is returned when a request to retrieve Transaction data ' +
             'is made before Plaid finishes the <a href="https://plaid.com/' +
             'docs/quickstart/#transaction-data-with-webhooks">initial ' +
             'transaction pull.</a></p></div>';
          }
          // Render the error
          $('#get-transactions-data').slideUp(function() {
            $(this).slideUp(function() {
              $(this).html(errorHtml).slideDown();
            });
          });
        } else {
          $('#get-transactions-data').slideUp(function() {
            var html = '';
            data.transactions.forEach(function(txn, idx) {
              html += '<div class="inner">';
              html += '<strong>' + txn.name + '</strong><br>';
              html += '$' + txn.amount;
              html += '<br><em>' + txn.date + '</em>';
              html += '</div>';
            });

            $(this).slideUp(function() {
              $(this).html(html).slideDown();
            });
          });
        }
      });
    });
  })(jQuery);
  </script>
</body>
</html>
